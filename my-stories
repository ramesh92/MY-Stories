1. Integrate jenkins to s3 bucket?

step1: create jenkins server
	1. Launch Red-hat linux ec2 instance
		i.  open the EC2 console in AWS account, from the console dashboard, choose launch instance.
		ii. choose an AMI(Amazon Machine Image)
		iii.choose an Instance type
		iv. choose Review and launch, in this page, under security group, choose 'edit security groups'
		    and configure the security group and choose review and launch.
		v.  When prompted for a key pair, select 'choose an existing keypair or create a new keypair',
		    if select new keypair, should download keypair before launch instance.  
	2. install java and set path
		i. Connect EC2 instance using putty.
			Before connecting putty, convert keypair from .pem to .ppk format. Putty does not natively
  			support .pem format generated by amazon ec2. Putty has a tool named puttygen, which can 
			convert keys to the required format(.ppk).
			open putty, enter IP/DNS of instance, In the category pane, expand connection, expand SSH,
			and then choose Auth, and browse .ppk key, and select open.  
		ii.Type below commands
			sudo yum update
			sudo yum install java-1.8* -y
			sudo vi .bash_profile
			JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-*
			PATH=$PATH:$JAVA_HOME
			export PATH
			:wq
			source .bash_profile
	3. download and install jenkins on to ec2 instance
		i.  Type below commands 
			sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat/jenkins.repo
			sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
			sudo yum install jenkins -y
		ii. start jenkins service
			sudo systemctl start jenkins
			sudo systemctl status jenkins
		iii.configure jenkins
			Browse http://<EC2 instance IP>:8080, the first time we will be prompted to unlock jenkins.
			as noted on the user interface, we can find the password in /var/lib/jenkins/secrets/initialAdminPassword
 			and paste the value in the password box, then choose continue.
			Customize jenkins page will appear, in this page select 'install suggested plugins/selected plugins to
			install'. jenkins will start to download and install the all necessary plugins.
			after completion, the 'create first admin user' panel will showup. once filled the data, finally
			it will ask for URL infomation where you can configure the default instance path for jenkins.
			Hit the 'save and continue' button. then 'jenkins is ready' page will showup.

step2: create s3 bucket to store artifacts
      1. Signin to the AWS management console, from the console dashboard, choose s3 under storage.
      2. choose create bucket, give the bucket name and region, and click create.
 
step3: create new IAM role with "s3 full access" and assign it to jenkins server
      1. From the console dashboard, choose IAM under 'Security, Identity, & Compliance', click the 'Roles' tab then click 'create role'.
	 Click Next: Permissions and create policy and click Next: tags and give tag name and click Next: Review, In the Role name field, type a role name and click create role.
      2. From the EC2 instance console, select instance. goto actions, choose instance setting, click attach/replace IAM role, select IAM role and click apply.
 	
step4: install "s3 Publisher" plugin on jenkins
      1. Goto jenkins dashboard, in manage jenkins choose manage plugins and search 's3 publisher' plugin in avalible section, then select and click on install without restart.
  
step5: configure s3 profile on jenkins
      1. Goto jenkins dashboard, in manage jenkins choose configure system and scroll down, we can see 'Amazon s3 profile'
click on add and enter the credentials which should have the appropriate access to s3 bucket.

step6: create a job to store artifacts under s3 
      1. Now create a Jenkins job as a maven project.
      2. In the SCM section, enter git repositories path.
      3. In the Build section, enter Goals and options.
      4. In the Post-build section, select 'Publish artifacts to s3bucket' and fill out the required details and save the job.
      5. Click on build now and monitor the job status.
      6. If everything is setup correctly , we can see the artifacts are uploaded to S3 bucket 


